name: Build Binaries

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun test

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/bun.lockb') }}

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: bun run test:e2e

  build:
    needs: test
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: darwin-arm64
            suffix: macos-arm64
          - os: macos-latest
            target: darwin-x64
            suffix: macos-intel
          - os: ubuntu-latest
            target: linux-x64
            suffix: linux-x64
          - os: ubuntu-latest
            target: linux-arm64
            suffix: linux-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Generate assets
        run: node scripts/generate-assets.cjs

      - name: Build binary
        run: bun build --compile --target=bun-${{ matrix.target }} src/cli.ts --outfile dist/file-classifier-${{ matrix.suffix }}

      - name: Test binary
        if: matrix.target == 'darwin-arm64' || matrix.target == 'linux-x64'
        run: |
          chmod +x dist/file-classifier-${{ matrix.suffix }}
          ./dist/file-classifier-${{ matrix.suffix }} --version

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: file-classifier-${{ matrix.suffix }}
          path: dist/file-classifier-${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/file-classifier-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}